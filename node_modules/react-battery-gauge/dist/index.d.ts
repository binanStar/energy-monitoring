import React, { FC } from 'react';
import type { DeepPartial, FormatValue, TGaugeCanvas, TGaugeCustom } from './typings';
export interface Props extends Omit<React.SVGProps<SVGSVGElement>, 'orientation'> {
    /**
     * Meter value range [0-100]
     */
    value: TGaugeCanvas['value'];
    /**
     * Meter max value
     */
    maxValue?: TGaugeCanvas['maxValue'];
    /**
     * Changes orientation, keeping text horizontal
     */
    orientation?: TGaugeCanvas['orientation'];
    /**
     * We don't like passing both width and height, can create unusual looking shape.
     * Size will help gauge to achieve the desired size maintaining aspect ratio
     */
    size?: number;
    /**
     * Gauge aspect ratio,
     * At padding 0 easy to create battery types ->
     * D = 0.56,
     * C = 0.52,
     * AA = 0.28,
     * AAA = 0.23,
     * AAAA = 0.19 ,
     * default C battery
     */
    aspectRatio?: number;
    /**
     * Padding of gauge within canvas
     */
    padding?: TGaugeCanvas['padding'];
    /**
     * Enable animation on mount
     */
    animated?: boolean;
    /**
     * Battery is charging
     */
    charging?: boolean;
    /**
     * Format the visible reading text as per your need
     * Note: you can turn off percentage symbol from customizations
     */
    formatValue?: FormatValue;
    /**
     * All components customization
     */
    customization?: DeepPartial<TGaugeCustom>;
}
export declare const BatteryGauge: FC<Props>;
export default BatteryGauge;
